plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.katchup'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Acutator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		// import 순서 정의
		importOrder(
				"java",
				"javax",
				"lombok",
				"org.springframework",
				"",
				"\\#",
				"org.junit",
				"\\#org.junit",
				"com.guide",
				"\\#com.guide"
		)
		removeUnusedImports() // 사용하지 않는 import 제거
		googleJavaFormat()         // 구글 자바 포맷 적용
		indentWithTabs(2)
		indentWithSpaces(4)
		trimTrailingWhitespace() // 공백 제거
		endWithNewline()         // 끝부분 New Line 처리
	}
}

tasks.register('updateGitHooks', Copy) {
	from new File(rootProject.rootDir, 'scripts/pre-commit')
	into { new File(rootProject.rootDir, '.git/hooks') }
	if (System.getProperty('os.name').toLowerCase().contains('windows')) {
		Runtime.getRuntime().exec("cmd /c chmod -R +x .git/hooks/")
	} else {
		Runtime.getRuntime().exec("chmod -R +x .git/hooks/")
	}
}

tasks.named('compileJava') {
	dependsOn 'spotlessApply'
	dependsOn 'updateGitHooks'
}